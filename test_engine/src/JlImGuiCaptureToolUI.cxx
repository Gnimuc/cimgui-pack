// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlImGuiTestEngine.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ImGuiCaptureToolUI> : std::false_type { };
  template<> struct DefaultConstructible<ImGuiCaptureToolUI> : std::false_type { };
}

// Class generating the wrapper for type ImGuiCaptureToolUI
// signature to use in the veto file: ImGuiCaptureToolUI
struct JlImGuiCaptureToolUI: public Wrapper {

  JlImGuiCaptureToolUI(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ImGuiCaptureToolUI (" __HERE__ ")");
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_capture_tool.h:153:18
    jlcxx::TypeWrapper<ImGuiCaptureToolUI>  t = jlModule.add_type<ImGuiCaptureToolUI>("ImGuiCaptureToolUI");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ImGuiCaptureToolUI>>(new jlcxx::TypeWrapper<ImGuiCaptureToolUI>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ImGuiCaptureToolUI>> type_;
};
std::shared_ptr<Wrapper> newJlImGuiCaptureToolUI(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlImGuiCaptureToolUI(module));
}
