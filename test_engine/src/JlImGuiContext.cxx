// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlImGuiTestEngine.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<ImGuiContext> : std::false_type { };
  template<> struct DefaultConstructible<ImGuiContext> : std::false_type { };
  template<> struct CopyConstructible<ImGuiContext> : std::false_type { };
}

// Class generating the wrapper for type ImGuiContext
// signature to use in the veto file: ImGuiContext
struct JlImGuiContext: public Wrapper {

  JlImGuiContext(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ImGuiContext (" __HERE__ ")");
    // defined in ../cimgui/imgui/imgui_internal.h:2214:8
    jlcxx::TypeWrapper<ImGuiContext>  t = jlModule.add_type<ImGuiContext>("ImGuiContext");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ImGuiContext>>(new jlcxx::TypeWrapper<ImGuiContext>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ImGuiContext>> type_;
};
std::shared_ptr<Wrapper> newJlImGuiContext(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlImGuiContext(module));
}
