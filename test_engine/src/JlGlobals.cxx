// this file was auto-generated by wrapit v1.4.0
#include "Wrapper.h"

#include "jlImGuiTestEngine.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"
// Class generating the wrapper for type 
// signature to use in the veto file: 
struct JlGlobal: public Wrapper {

  JlGlobal(jlcxx::Module& jlModule): Wrapper(jlModule){
  }

  void add_methods() const{
    auto& t = module_;

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngineHook_ItemInfo(ImGuiContext *, ImGuiID, const char *, ImGuiItemStatusFlags) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngineHook_ItemInfo(ImGuiContext *, ImGuiID, const char *, ImGuiItemStatusFlags)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:165:21
    t.method("ImGuiTestEngineHook_ItemInfo", static_cast<void (*)(ImGuiContext *, ImGuiID, const char *, ImGuiItemStatusFlags) >(&ImGuiTestEngineHook_ItemInfo));


    DEBUG_MSG("Adding wrapper for const char * ImGuiTestEngine_FindItemDebugLabel(ImGuiContext *, ImGuiID) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImGuiTestEngine_FindItemDebugLabel(ImGuiContext *, ImGuiID)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:168:21
    t.method("ImGuiTestEngine_FindItemDebugLabel", [](ImGuiContext * arg0, ImGuiID arg1) { return (std::string)ImGuiTestEngine_FindItemDebugLabel(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_Check(const char *, const char *, int, ImGuiTestCheckFlags, bool, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_Check(const char *, const char *, int, ImGuiTestCheckFlags, bool, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:171:21
    t.method("ImGuiTestEngine_Check", static_cast<bool (*)(const char *, const char *, int, ImGuiTestCheckFlags, bool, const char *) >(&ImGuiTestEngine_Check));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_CheckStrOp(const char *, const char *, int, ImGuiTestCheckFlags, const char *, const char *, const char *, const char *, const char *, bool *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_CheckStrOp(const char *, const char *, int, ImGuiTestCheckFlags, const char *, const char *, const char *, const char *, const char *, bool *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:172:21
    t.method("ImGuiTestEngine_CheckStrOp", static_cast<bool (*)(const char *, const char *, int, ImGuiTestCheckFlags, const char *, const char *, const char *, const char *, const char *, bool *) >(&ImGuiTestEngine_CheckStrOp));


    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_AssertLog(const char *, const char *, const char *, int) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_AssertLog(const char *, const char *, const char *, int)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:174:21
    t.method("ImGuiTestEngine_AssertLog", static_cast<void (*)(const char *, const char *, const char *, int) >(&ImGuiTestEngine_AssertLog));

    DEBUG_MSG("Adding wrapper for ImGuiTestEngine * ImGuiTestEngine_CreateContext() (" __HERE__ ")");
    // signature to use in the veto list: ImGuiTestEngine * ImGuiTestEngine_CreateContext()
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:182:31
    t.method("ImGuiTestEngine_CreateContext", static_cast<ImGuiTestEngine * (*)() >(&ImGuiTestEngine_CreateContext));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_DestroyContext(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_DestroyContext(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:183:31
    t.method("ImGuiTestEngine_DestroyContext", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_DestroyContext));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_Start(ImGuiTestEngine *, ImGuiContext *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_Start(ImGuiTestEngine *, ImGuiContext *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:184:31
    t.method("ImGuiTestEngine_Start", static_cast<void (*)(ImGuiTestEngine *, ImGuiContext *) >(&ImGuiTestEngine_Start));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_Stop(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_Stop(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:185:31
    t.method("ImGuiTestEngine_Stop", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_Stop));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_PostSwap(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_PostSwap(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:186:31
    t.method("ImGuiTestEngine_PostSwap", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_PostSwap));

    DEBUG_MSG("Adding wrapper for ImGuiTestEngineIO & ImGuiTestEngine_GetIO(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiTestEngineIO & ImGuiTestEngine_GetIO(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:187:31
    t.method("ImGuiTestEngine_GetIO", static_cast<ImGuiTestEngineIO & (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_GetIO));

    DEBUG_MSG("Adding wrapper for ImGuiTest * ImGuiTestEngine_RegisterTest(ImGuiTestEngine *, const char *, const char *, const char *, int) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiTest * ImGuiTestEngine_RegisterTest(ImGuiTestEngine *, const char *, const char *, const char *, int)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:191:31
    t.method("ImGuiTestEngine_RegisterTest", static_cast<ImGuiTest * (*)(ImGuiTestEngine *, const char *, const char *, const char *, int) >(&ImGuiTestEngine_RegisterTest));
    t.method("ImGuiTestEngine_RegisterTest", [](ImGuiTestEngine * arg0, const char * arg1, const char * arg2)->ImGuiTest * { return ImGuiTestEngine_RegisterTest(arg0, arg1, arg2); });
    t.method("ImGuiTestEngine_RegisterTest", [](ImGuiTestEngine * arg0, const char * arg1, const char * arg2, const char * arg3)->ImGuiTest * { return ImGuiTestEngine_RegisterTest(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_UnregisterTest(ImGuiTestEngine *, ImGuiTest *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_UnregisterTest(ImGuiTestEngine *, ImGuiTest *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:192:31
    t.method("ImGuiTestEngine_UnregisterTest", static_cast<void (*)(ImGuiTestEngine *, ImGuiTest *) >(&ImGuiTestEngine_UnregisterTest));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_QueueTest(ImGuiTestEngine *, ImGuiTest *, ImGuiTestRunFlags) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_QueueTest(ImGuiTestEngine *, ImGuiTest *, ImGuiTestRunFlags)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:195:31
    t.method("ImGuiTestEngine_QueueTest", static_cast<void (*)(ImGuiTestEngine *, ImGuiTest *, ImGuiTestRunFlags) >(&ImGuiTestEngine_QueueTest));
    t.method("ImGuiTestEngine_QueueTest", [](ImGuiTestEngine * arg0, ImGuiTest * arg1)->void { ImGuiTestEngine_QueueTest(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_QueueTests(ImGuiTestEngine *, ImGuiTestGroup, const char *, ImGuiTestRunFlags) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_QueueTests(ImGuiTestEngine *, ImGuiTestGroup, const char *, ImGuiTestRunFlags)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:196:31
    t.method("ImGuiTestEngine_QueueTests", static_cast<void (*)(ImGuiTestEngine *, ImGuiTestGroup, const char *, ImGuiTestRunFlags) >(&ImGuiTestEngine_QueueTests));
    t.method("ImGuiTestEngine_QueueTests", [](ImGuiTestEngine * arg0, ImGuiTestGroup arg1)->void { ImGuiTestEngine_QueueTests(arg0, arg1); });
    t.method("ImGuiTestEngine_QueueTests", [](ImGuiTestEngine * arg0, ImGuiTestGroup arg1, const char * arg2)->void { ImGuiTestEngine_QueueTests(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_TryAbortEngine(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_TryAbortEngine(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:197:31
    t.method("ImGuiTestEngine_TryAbortEngine", static_cast<bool (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_TryAbortEngine));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_AbortCurrentTest(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_AbortCurrentTest(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:198:31
    t.method("ImGuiTestEngine_AbortCurrentTest", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_AbortCurrentTest));

    DEBUG_MSG("Adding wrapper for ImGuiTest * ImGuiTestEngine_FindTestByName(ImGuiTestEngine *, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiTest * ImGuiTestEngine_FindTestByName(ImGuiTestEngine *, const char *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:199:31
    t.method("ImGuiTestEngine_FindTestByName", static_cast<ImGuiTest * (*)(ImGuiTestEngine *, const char *, const char *) >(&ImGuiTestEngine_FindTestByName));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_IsTestQueueEmpty(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_IsTestQueueEmpty(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:203:31
    t.method("ImGuiTestEngine_IsTestQueueEmpty", static_cast<bool (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_IsTestQueueEmpty));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_IsUsingSimulatedInputs(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_IsUsingSimulatedInputs(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:204:31
    t.method("ImGuiTestEngine_IsUsingSimulatedInputs", static_cast<bool (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_IsUsingSimulatedInputs));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_GetResult(ImGuiTestEngine *, int &, int &) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_GetResult(ImGuiTestEngine *, int &, int &)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:205:31
    t.method("ImGuiTestEngine_GetResult", static_cast<void (*)(ImGuiTestEngine *, int &, int &) >(&ImGuiTestEngine_GetResult));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_InstallDefaultCrashHandler() (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_InstallDefaultCrashHandler()
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:211:31
    t.method("ImGuiTestEngine_InstallDefaultCrashHandler", static_cast<void (*)() >(&ImGuiTestEngine_InstallDefaultCrashHandler));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_CrashHandler() (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_CrashHandler()
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_engine.h:212:31
    t.method("ImGuiTestEngine_CrashHandler", static_cast<void (*)() >(&ImGuiTestEngine_CrashHandler));

    DEBUG_MSG("Adding wrapper for ImGuiID ImHashDecoratedPath(const char *, const char *, ImGuiID) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiID ImHashDecoratedPath(const char *, const char *, ImGuiID)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:20:13
    t.method("ImHashDecoratedPath", static_cast<ImGuiID (*)(const char *, const char *, ImGuiID) >(&ImHashDecoratedPath));
    t.method("ImHashDecoratedPath", [](const char * arg0)->ImGuiID { return ImHashDecoratedPath(arg0); });
    t.method("ImHashDecoratedPath", [](const char * arg0, const char * arg1)->ImGuiID { return ImHashDecoratedPath(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * ImFindNextDecoratedPartInPath(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImFindNextDecoratedPartInPath(const char *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:21:13
    t.method("ImFindNextDecoratedPartInPath", [](const char * arg0) { return (std::string)ImFindNextDecoratedPartInPath(arg0); });
    t.method("ImFindNextDecoratedPartInPath", [](const char * arg0, const char * arg1) { return (std::string)ImFindNextDecoratedPartInPath(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool ImFileExist(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImFileExist(const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:27:13
    t.method("ImFileExist", static_cast<bool (*)(const char *) >(&ImFileExist));

    DEBUG_MSG("Adding wrapper for bool ImFileDelete(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImFileDelete(const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:28:13
    t.method("ImFileDelete", static_cast<bool (*)(const char *) >(&ImFileDelete));

    DEBUG_MSG("Adding wrapper for bool ImFileCreateDirectoryChain(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImFileCreateDirectoryChain(const char *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:29:13
    t.method("ImFileCreateDirectoryChain", static_cast<bool (*)(const char *, const char *) >(&ImFileCreateDirectoryChain));
    t.method("ImFileCreateDirectoryChain", [](const char * arg0)->bool { return ImFileCreateDirectoryChain(arg0); });

    DEBUG_MSG("Adding wrapper for bool ImFileFindInParents(const char *, int, Str *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImFileFindInParents(const char *, int, Str *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:30:13
    t.method("ImFileFindInParents", static_cast<bool (*)(const char *, int, Str *) >(&ImFileFindInParents));

    DEBUG_MSG("Adding wrapper for const char * ImPathFindFilename(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImPathFindFilename(const char *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:38:13
    t.method("ImPathFindFilename", [](const char * arg0) { return (std::string)ImPathFindFilename(arg0); });
    t.method("ImPathFindFilename", [](const char * arg0, const char * arg1) { return (std::string)ImPathFindFilename(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * ImPathFindExtension(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImPathFindExtension(const char *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:39:13
    t.method("ImPathFindExtension", [](const char * arg0) { return (std::string)ImPathFindExtension(arg0); });
    t.method("ImPathFindExtension", [](const char * arg0, const char * arg1) { return (std::string)ImPathFindExtension(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void ImPathFixSeparatorsForCurrentOS(char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImPathFixSeparatorsForCurrentOS(char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:40:13
    t.method("ImPathFixSeparatorsForCurrentOS", static_cast<void (*)(char *) >(&ImPathFixSeparatorsForCurrentOS));

    DEBUG_MSG("Adding wrapper for void ImStrReplace(Str *, const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImStrReplace(Str *, const char *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:46:13
    t.method("ImStrReplace", static_cast<void (*)(Str *, const char *, const char *) >(&ImStrReplace));

    DEBUG_MSG("Adding wrapper for const char * ImStrchrRangeWithEscaping(const char *, const char *, char) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImStrchrRangeWithEscaping(const char *, const char *, char)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:47:13
    t.method("ImStrchrRangeWithEscaping", [](const char * arg0, const char * arg1, char arg2) { return (std::string)ImStrchrRangeWithEscaping(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void ImStrXmlEscape(Str *) (" __HERE__ ")");
    // signature to use in the veto list: void ImStrXmlEscape(Str *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:48:13
    t.method("ImStrXmlEscape", static_cast<void (*)(Str *) >(&ImStrXmlEscape));

    DEBUG_MSG("Adding wrapper for int ImStrBase64Encode(const unsigned char *, char *, int) (" __HERE__ ")");
    // signature to use in the veto list: int ImStrBase64Encode(const unsigned char *, char *, int)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:49:13
    t.method("ImStrBase64Encode", static_cast<int (*)(const unsigned char *, char *, int) >(&ImStrBase64Encode));

    DEBUG_MSG("Adding wrapper for void ImParseExtractArgcArgvFromCommandLine(int *, const char ***, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImParseExtractArgcArgvFromCommandLine(int *, const char ***, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:55:13
    t.method("ImParseExtractArgcArgvFromCommandLine", static_cast<void (*)(int *, const char ***, const char *) >(&ImParseExtractArgcArgvFromCommandLine));

    DEBUG_MSG("Adding wrapper for uint64_t ImTimeGetInMicroseconds() (" __HERE__ ")");
    // signature to use in the veto list: uint64_t ImTimeGetInMicroseconds()
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:62:13
    t.method("ImTimeGetInMicroseconds", static_cast<uint64_t (*)() >(&ImTimeGetInMicroseconds));

    DEBUG_MSG("Adding wrapper for void ImTimestampToISO8601(uint64_t, Str *) (" __HERE__ ")");
    // signature to use in the veto list: void ImTimestampToISO8601(uint64_t, Str *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:63:13
    t.method("ImTimestampToISO8601", static_cast<void (*)(uint64_t, Str *) >(&ImTimestampToISO8601));

    DEBUG_MSG("Adding wrapper for void ImThreadSleepInMilliseconds(int) (" __HERE__ ")");
    // signature to use in the veto list: void ImThreadSleepInMilliseconds(int)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:69:13
    t.method("ImThreadSleepInMilliseconds", static_cast<void (*)(int) >(&ImThreadSleepInMilliseconds));

    DEBUG_MSG("Adding wrapper for void ImThreadSetCurrentThreadDescription(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImThreadSetCurrentThreadDescription(const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:70:13
    t.method("ImThreadSetCurrentThreadDescription", static_cast<void (*)(const char *) >(&ImThreadSetCurrentThreadDescription));

    DEBUG_MSG("Adding wrapper for const ImBuildInfo * ImBuildGetCompilationInfo() (" __HERE__ ")");
    // signature to use in the veto list: const ImBuildInfo * ImBuildGetCompilationInfo()
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:87:21
    t.method("ImBuildGetCompilationInfo", static_cast<const ImBuildInfo * (*)() >(&ImBuildGetCompilationInfo));

    DEBUG_MSG("Adding wrapper for bool ImBuildFindGitBranchName(const char *, Str *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImBuildFindGitBranchName(const char *, Str *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:88:21
    t.method("ImBuildFindGitBranchName", static_cast<bool (*)(const char *, Str *) >(&ImBuildFindGitBranchName));

    DEBUG_MSG("Adding wrapper for bool ImOsCreateProcess(const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImOsCreateProcess(const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:111:13
    t.method("ImOsCreateProcess", static_cast<bool (*)(const char *) >(&ImOsCreateProcess));

    DEBUG_MSG("Adding wrapper for void ImOsOpenInShell(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImOsOpenInShell(const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:114:13
    t.method("ImOsOpenInShell", static_cast<void (*)(const char *) >(&ImOsOpenInShell));

    DEBUG_MSG("Adding wrapper for bool ImOsIsDebuggerPresent() (" __HERE__ ")");
    // signature to use in the veto list: bool ImOsIsDebuggerPresent()
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:115:13
    t.method("ImOsIsDebuggerPresent", static_cast<bool (*)() >(&ImOsIsDebuggerPresent));

    DEBUG_MSG("Adding wrapper for void ImOsOutputDebugString(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImOsOutputDebugString(const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:116:13
    t.method("ImOsOutputDebugString", static_cast<void (*)(const char *) >(&ImOsOutputDebugString));

    DEBUG_MSG("Adding wrapper for void ImOsConsoleSetTextColor(ImOsConsoleStream, ImOsConsoleTextColor) (" __HERE__ ")");
    // signature to use in the veto list: void ImOsConsoleSetTextColor(ImOsConsoleStream, ImOsConsoleTextColor)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:117:13
    t.method("ImOsConsoleSetTextColor", static_cast<void (*)(ImOsConsoleStream, ImOsConsoleTextColor) >(&ImOsConsoleSetTextColor));

    DEBUG_MSG("Adding wrapper for void TableDiscardInstanceAndSettings(ImGuiID) (" __HERE__ ")");
    // signature to use in the veto list: void TableDiscardInstanceAndSettings(ImGuiID)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:127:13
    t.method("TableDiscardInstanceAndSettings", static_cast<void (*)(ImGuiID) >(&TableDiscardInstanceAndSettings));

    DEBUG_MSG("Adding wrapper for void ImGui::ItemErrorFrame(ImU32) (" __HERE__ ")");
    // signature to use in the veto list: void ImGui::ItemErrorFrame(ImU32)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:188:21
    t.method("ImGui!ItemErrorFrame", static_cast<void (*)(ImU32) >(&ImGui::ItemErrorFrame));

    DEBUG_MSG("Adding wrapper for bool ImGui::Splitter(const char *, float *, float *, int, int, float, float) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGui::Splitter(const char *, float *, float *, int, int, float, float)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_utils.h:200:21
    t.method("ImGui!Splitter", static_cast<bool (*)(const char *, float *, float *, int, int, float, float) >(&ImGui::Splitter));
    t.method("ImGui!Splitter", [](const char * arg0, float * arg1, float * arg2, int arg3)->bool { return ImGui::Splitter(arg0, arg1, arg2, arg3); });
    t.method("ImGui!Splitter", [](const char * arg0, float * arg1, float * arg2, int arg3, int arg4)->bool { return ImGui::Splitter(arg0, arg1, arg2, arg3, arg4); });
    t.method("ImGui!Splitter", [](const char * arg0, float * arg1, float * arg2, int arg3, int arg4, float arg5)->bool { return ImGui::Splitter(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for ImGuiTestItemInfo * ImGuiTestEngine_FindItemInfo(ImGuiTestEngine *, ImGuiID, const char *) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiTestItemInfo * ImGuiTestEngine_FindItemInfo(ImGuiTestEngine *, ImGuiID, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:214:21
    t.method("ImGuiTestEngine_FindItemInfo", static_cast<ImGuiTestItemInfo * (*)(ImGuiTestEngine *, ImGuiID, const char *) >(&ImGuiTestEngine_FindItemInfo));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_Yield(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_Yield(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:215:21
    t.method("ImGuiTestEngine_Yield", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_Yield));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_SetDeltaTime(ImGuiTestEngine *, float) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_SetDeltaTime(ImGuiTestEngine *, float)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:216:21
    t.method("ImGuiTestEngine_SetDeltaTime", static_cast<void (*)(ImGuiTestEngine *, float) >(&ImGuiTestEngine_SetDeltaTime));

    DEBUG_MSG("Adding wrapper for int ImGuiTestEngine_GetFrameCount(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: int ImGuiTestEngine_GetFrameCount(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:217:21
    t.method("ImGuiTestEngine_GetFrameCount", static_cast<int (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_GetFrameCount));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_PassFilter(ImGuiTest *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_PassFilter(ImGuiTest *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:218:21
    t.method("ImGuiTestEngine_PassFilter", static_cast<bool (*)(ImGuiTest *, const char *) >(&ImGuiTestEngine_PassFilter));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_RunTest(ImGuiTestEngine *, ImGuiTestContext *, ImGuiTest *, ImGuiTestRunFlags) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_RunTest(ImGuiTestEngine *, ImGuiTestContext *, ImGuiTest *, ImGuiTestRunFlags)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:219:21
    t.method("ImGuiTestEngine_RunTest", static_cast<void (*)(ImGuiTestEngine *, ImGuiTestContext *, ImGuiTest *, ImGuiTestRunFlags) >(&ImGuiTestEngine_RunTest));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_RebootUiContext(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_RebootUiContext(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:221:21
    t.method("ImGuiTestEngine_RebootUiContext", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_RebootUiContext));

    DEBUG_MSG("Adding wrapper for ImGuiPerfTool * ImGuiTestEngine_GetPerfTool(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiPerfTool * ImGuiTestEngine_GetPerfTool(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:222:21
    t.method("ImGuiTestEngine_GetPerfTool", static_cast<ImGuiPerfTool * (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_GetPerfTool));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_CaptureScreenshot(ImGuiTestEngine *, ImGuiCaptureArgs *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_CaptureScreenshot(ImGuiTestEngine *, ImGuiCaptureArgs *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:225:21
    t.method("ImGuiTestEngine_CaptureScreenshot", static_cast<bool (*)(ImGuiTestEngine *, ImGuiCaptureArgs *) >(&ImGuiTestEngine_CaptureScreenshot));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_CaptureBeginVideo(ImGuiTestEngine *, ImGuiCaptureArgs *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_CaptureBeginVideo(ImGuiTestEngine *, ImGuiCaptureArgs *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:226:21
    t.method("ImGuiTestEngine_CaptureBeginVideo", static_cast<bool (*)(ImGuiTestEngine *, ImGuiCaptureArgs *) >(&ImGuiTestEngine_CaptureBeginVideo));

    DEBUG_MSG("Adding wrapper for bool ImGuiTestEngine_CaptureEndVideo(ImGuiTestEngine *, ImGuiCaptureArgs *) (" __HERE__ ")");
    // signature to use in the veto list: bool ImGuiTestEngine_CaptureEndVideo(ImGuiTestEngine *, ImGuiCaptureArgs *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:227:21
    t.method("ImGuiTestEngine_CaptureEndVideo", static_cast<bool (*)(ImGuiTestEngine *, ImGuiCaptureArgs *) >(&ImGuiTestEngine_CaptureEndVideo));

    DEBUG_MSG("Adding wrapper for const char * ImGuiTestEngine_GetStatusName(ImGuiTestStatus) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImGuiTestEngine_GetStatusName(ImGuiTestStatus)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:230:21
    t.method("ImGuiTestEngine_GetStatusName", [](ImGuiTestStatus arg0) { return (std::string)ImGuiTestEngine_GetStatusName(arg0); });

    DEBUG_MSG("Adding wrapper for const char * ImGuiTestEngine_GetRunSpeedName(ImGuiTestRunSpeed) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImGuiTestEngine_GetRunSpeedName(ImGuiTestRunSpeed)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:231:21
    t.method("ImGuiTestEngine_GetRunSpeedName", [](ImGuiTestRunSpeed arg0) { return (std::string)ImGuiTestEngine_GetRunSpeedName(arg0); });

    DEBUG_MSG("Adding wrapper for const char * ImGuiTestEngine_GetVerboseLevelName(ImGuiTestVerboseLevel) (" __HERE__ ")");
    // signature to use in the veto list: const char * ImGuiTestEngine_GetVerboseLevelName(ImGuiTestVerboseLevel)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_internal.h:232:21
    t.method("ImGuiTestEngine_GetVerboseLevelName", [](ImGuiTestVerboseLevel arg0) { return (std::string)ImGuiTestEngine_GetVerboseLevelName(arg0); });

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_PerfToolAppendToCSV(ImGuiPerfTool *, ImGuiPerfToolEntry *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_PerfToolAppendToCSV(ImGuiPerfTool *, ImGuiPerfToolEntry *, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_perftool.h:131:19
    t.method("ImGuiTestEngine_PerfToolAppendToCSV", static_cast<void (*)(ImGuiPerfTool *, ImGuiPerfToolEntry *, const char *) >(&ImGuiTestEngine_PerfToolAppendToCSV));
    t.method("ImGuiTestEngine_PerfToolAppendToCSV", [](ImGuiPerfTool * arg0, ImGuiPerfToolEntry * arg1)->void { ImGuiTestEngine_PerfToolAppendToCSV(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_ShowTestEngineWindows(ImGuiTestEngine *, bool *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_ShowTestEngineWindows(ImGuiTestEngine *, bool *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_ui.h:21:17
    t.method("ImGuiTestEngine_ShowTestEngineWindows", static_cast<void (*)(ImGuiTestEngine *, bool *) >(&ImGuiTestEngine_ShowTestEngineWindows));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_OpenSourceFile(ImGuiTestEngine *, const char *, int) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_OpenSourceFile(ImGuiTestEngine *, const char *, int)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_ui.h:22:17
    t.method("ImGuiTestEngine_OpenSourceFile", static_cast<void (*)(ImGuiTestEngine *, const char *, int) >(&ImGuiTestEngine_OpenSourceFile));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_PrintResultSummary(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_PrintResultSummary(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_exporters.h:56:6
    t.method("ImGuiTestEngine_PrintResultSummary", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_PrintResultSummary));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_Export(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_Export(ImGuiTestEngine *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_exporters.h:58:6
    t.method("ImGuiTestEngine_Export", static_cast<void (*)(ImGuiTestEngine *) >(&ImGuiTestEngine_Export));

    DEBUG_MSG("Adding wrapper for void ImGuiTestEngine_ExportEx(ImGuiTestEngine *, ImGuiTestEngineExportFormat, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void ImGuiTestEngine_ExportEx(ImGuiTestEngine *, ImGuiTestEngineExportFormat, const char *)
    // defined in ./imgui_test_engine/imgui_test_engine/imgui_te_exporters.h:59:6
    t.method("ImGuiTestEngine_ExportEx", static_cast<void (*)(ImGuiTestEngine *, ImGuiTestEngineExportFormat, const char *) >(&ImGuiTestEngine_ExportEx));

    DEBUG_MSG("Adding wrapper for void * TestFunc(ImGuiTest *) (" __HERE__ ")");
    // signature to use in the veto list: void * TestFunc(ImGuiTest *)
    // defined in ./overrides.h:8:14
    t.method("TestFunc", static_cast<void * (*)(ImGuiTest *) >(&TestFunc));

    DEBUG_MSG("Adding wrapper for void * set_TestFunc(ImGuiTest *, void *) (" __HERE__ ")");
    // signature to use in the veto list: void * set_TestFunc(ImGuiTest *, void *)
    // defined in ./overrides.h:12:14
    t.method("set_TestFunc", static_cast<void * (*)(ImGuiTest *, void *) >(&set_TestFunc));

    DEBUG_MSG("Adding wrapper for void * GuiFunc(ImGuiTest *) (" __HERE__ ")");
    // signature to use in the veto list: void * GuiFunc(ImGuiTest *)
    // defined in ./overrides.h:17:14
    t.method("GuiFunc", static_cast<void * (*)(ImGuiTest *) >(&GuiFunc));

    DEBUG_MSG("Adding wrapper for void * set_GuiFunc(ImGuiTest *, void *) (" __HERE__ ")");
    // signature to use in the veto list: void * set_GuiFunc(ImGuiTest *, void *)
    // defined in ./overrides.h:21:14
    t.method("set_GuiFunc", static_cast<void * (*)(ImGuiTest *, void *) >(&set_GuiFunc));

    DEBUG_MSG("Adding wrapper for ImGuiContext * Ptr2ImGuiContext(void *) (" __HERE__ ")");
    // signature to use in the veto list: ImGuiContext * Ptr2ImGuiContext(void *)
    // defined in ./overrides.h:26:22
    t.method("Ptr2ImGuiContext", static_cast<ImGuiContext * (*)(void *) >(&Ptr2ImGuiContext));

    DEBUG_MSG("Adding wrapper for void * GetWindowByRef(ImGuiTestContext *, ImGuiTestRef) (" __HERE__ ")");
    // signature to use in the veto list: void * GetWindowByRef(ImGuiTestContext *, ImGuiTestRef)
    // defined in ./overrides.h:30:14
    t.method("GetWindowByRef", static_cast<void * (*)(ImGuiTestContext *, ImGuiTestRef) >(&GetWindowByRef));

    DEBUG_MSG("Adding wrapper for void SetRef(ImGuiTestContext *, void *) (" __HERE__ ")");
    // signature to use in the veto list: void SetRef(ImGuiTestContext *, void *)
    // defined in ./overrides.h:34:13
    t.method("SetRef", static_cast<void (*)(ImGuiTestContext *, void *) >(&SetRef));

    DEBUG_MSG("Adding wrapper for void ScrollToTabItem(ImGuiTestContext *, void *, ImGuiID) (" __HERE__ ")");
    // signature to use in the veto list: void ScrollToTabItem(ImGuiTestContext *, void *, ImGuiID)
    // defined in ./overrides.h:38:13
    t.method("ScrollToTabItem", static_cast<void (*)(ImGuiTestContext *, void *, ImGuiID) >(&ScrollToTabItem));

    DEBUG_MSG("Adding wrapper for bool TabBarCompareOrder(ImGuiTestContext *, void *, const char **) (" __HERE__ ")");
    // signature to use in the veto list: bool TabBarCompareOrder(ImGuiTestContext *, void *, const char **)
    // defined in ./overrides.h:42:13
    t.method("TabBarCompareOrder", static_cast<bool (*)(ImGuiTestContext *, void *, const char **) >(&TabBarCompareOrder));

    DEBUG_MSG("Adding wrapper for ImVec2 mkImVec2(float, float) (" __HERE__ ")");
    // signature to use in the veto list: ImVec2 mkImVec2(float, float)
    // defined in ./overrides.h:46:15
    t.method("mkImVec2", static_cast<ImVec2 (*)(float, float) >(&mkImVec2));

    DEBUG_MSG("Adding wrapper for jlcxx::Array<ImGuiTest *> TestsAll(ImGuiTestEngine *) (" __HERE__ ")");
    // signature to use in the veto list: jlcxx::Array<ImGuiTest *> TestsAll(ImGuiTestEngine *)
    // defined in ./overrides.h:50:33
    t.method("TestsAll", static_cast<jlcxx::Array<ImGuiTest *> (*)(ImGuiTestEngine *) >(&TestsAll));
  }
};
std::shared_ptr<Wrapper> newJlGlobal(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlGlobal(module));
}
